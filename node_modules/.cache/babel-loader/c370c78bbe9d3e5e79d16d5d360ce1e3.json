{"remainingRequest":"c:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\eslint-loader\\index.js??ref--13-0!c:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\src\\public\\axios.js","dependencies":[{"path":"c:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\src\\public\\axios.js","mtime":1569202105715},{"path":"c:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"c:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\n// 引用axios\nimport { Message, Loading } from 'element-ui'; // 引入elm组件\n\nimport store from \"../store/index\"; // 通过vuex 来存储 token等信息\n\nimport axios from 'axios'; // import global from '../api/global' // 通过global来 进行baseURL\n\nvar loadingInstance; // 请求遮罩\n// 自定义判断元素类型JS\n\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n} // 参数过滤函数\n\n\nfunction filterNull(o) {\n  for (var key in o) {\n    if (o[key] === null) {\n      delete o[key];\n    }\n\n    if (toType(o[key]) === 'string') {\n      o[key] = o[key].trim();\n    } else if (toType(o[key]) === 'object') {\n      o[key] = filterNull(o[key]);\n    } else if (toType(o[key]) === 'array') {\n      o[key] = filterNull(o[key]);\n    }\n  }\n\n  return o;\n}\n/**\r\n *\r\n *\r\n * @param {any} method 方法\r\n * @param {any} url 地址\r\n * @param {any} data 实体类body\r\n * @param {any} params url数据\r\n * @param {any} success 正确回调\r\n * @param {any} failure 错误回调\r\n */\n\n\nfunction apiAxios(method, url, data, params, success, failure) {\n  if (params && typeof params !== 'string') {\n    params = filterNull(params);\n  }\n\n  axios({\n    method: method === 'postG' ? 'POST' : method,\n    url: url,\n    // baseURL: global.baseUrl,\n    data: data || null,\n    params: params || null,\n    withCredentials: false,\n    // timeout: 1000,\n    headers: {\n      'X-HTTP-Method-Override': method === 'postG' ? 'get' : '',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (res) {\n    if (res.status === 204) {\n      res.data = {\n        message: '成功'\n      };\n    }\n\n    success(res.data.data);\n  }).catch(function (err) {\n    if (failure) {\n      failure(err);\n    }\n  });\n} // 返回在vue模板中的调用接口\n\n\nexport default {\n  // get请求\n  get: function get(url, data, params, success, failure) {\n    return apiAxios('GET', url, data, params, success, failure);\n  },\n  // post请求\n  post: function post(url, data, params, success, failure) {\n    return apiAxios('POST', url, data, params, success, failure);\n  },\n  // patch请求\n  patch: function patch(url, data, params, success, failure) {\n    return apiAxios('PATCH', url, data, params, success, failure);\n  },\n  // put请求\n  put: function put(url, data, params, success, failure) {\n    return apiAxios('PUT', url, data, params, success, failure);\n  },\n  // delete\n  delete: function _delete(url, data, params, success, failure) {\n    return apiAxios('DELETE', url, data, params, success, failure);\n  },\n  // 增加 postG请求 按后台要求 get请求在某些情况 需要传实体body so 添加postG请求\n  postG: function postG(url, data, params, postdata, success, failure) {\n    return apiAxios('postG', url, data, params, success, failure);\n  } // 添加一个请求拦截器\n\n};\naxios.interceptors.request.use(function (config) {\n  loadingInstance = Loading.service({\n    lock: true,\n    text: '努力拉取中 ~>_<~',\n    background: 'rgba(0, 0, 0, 0.7)'\n  });\n  config.headers.common['token'] = store.getters.getCookie; // 每次发送之前 从vuex拿token携带\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // 添加一个响应拦截器\n\naxios.interceptors.response.use(function (response) {\n  loadingInstance.close(); // 与后台沟通 204没有实体类 但前台需要实体类用以 promise回调 so 我们自己搞 按照各业务 可以删除或修改\n\n  if (response.status === 204) {\n    response.data = {\n      content: []\n    };\n  }\n\n  return response;\n}, function (error) {\n  loadingInstance.close();\n\n  if (error.response !== undefined) {\n    if (error.response.status === 401) {// 401 未登录 跳转到login页\n      // window.location.href = `login?redirect=http://${window.location.host}/${window.location.hash}`\n    } else if (error.response.status === 400 || error.response.status === 500) {\n      // 参询 强哥意见 将部分保存信息放入 details，无限时打印 方便开发调试\n      if (error.response.data.details) {\n        Message.error({\n          showClose: true,\n          message: error.response.data.details,\n          type: 'warning',\n          duration: 0\n        });\n      }\n\n      Message.error(error.response.data.message);\n    } else {\n      Message.error(error.message);\n    }\n  }\n\n  return Promise.reject(error);\n});",{"version":3,"sources":["c:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\src\\public\\axios.js"],"names":["Message","Loading","store","axios","loadingInstance","toType","obj","toString","call","match","toLowerCase","filterNull","o","key","trim","apiAxios","method","url","data","params","success","failure","withCredentials","headers","then","res","status","message","catch","err","get","post","patch","put","delete","postG","postdata","interceptors","request","use","config","service","lock","text","background","common","getters","getCookie","error","Promise","reject","response","close","content","undefined","details","showClose","type","duration"],"mappings":"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","sourcesContent":["// 引用axios\r\nimport {\r\n  Message,\r\n  Loading\r\n} from 'element-ui' // 引入elm组件\r\nimport store from '../store/index' // 通过vuex 来存储 token等信息\r\nimport axios from 'axios'\r\n// import global from '../api/global' // 通过global来 进行baseURL\r\nlet loadingInstance // 请求遮罩\r\n// 自定义判断元素类型JS\r\nfunction toType (obj) {\r\n  return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\r\n}\r\n// 参数过滤函数\r\nfunction filterNull (o) {\r\n  for (var key in o) {\r\n    if (o[key] === null) {\r\n      delete o[key]\r\n    }\r\n    if (toType(o[key]) === 'string') {\r\n      o[key] = o[key].trim()\r\n    } else if (toType(o[key]) === 'object') {\r\n      o[key] = filterNull(o[key])\r\n    } else if (toType(o[key]) === 'array') {\r\n      o[key] = filterNull(o[key])\r\n    }\r\n  }\r\n  return o\r\n}\r\n/**\r\n *\r\n *\r\n * @param {any} method 方法\r\n * @param {any} url 地址\r\n * @param {any} data 实体类body\r\n * @param {any} params url数据\r\n * @param {any} success 正确回调\r\n * @param {any} failure 错误回调\r\n */\r\nfunction apiAxios (method, url, data, params, success, failure) {\r\n  if (params && typeof params !== 'string') {\r\n    params = filterNull(params)\r\n  }\r\n  axios({\r\n    method: method === 'postG' ? 'POST' : method,\r\n    url: url,\r\n    // baseURL: global.baseUrl,\r\n    data: data || null,\r\n    params: params || null,\r\n    withCredentials: false,\r\n    // timeout: 1000,\r\n    headers: {\r\n      'X-HTTP-Method-Override': method === 'postG' ? 'get' : '',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(function (res) {\r\n    if (res.status === 204) {\r\n      res.data = {\r\n        message: '成功'\r\n      }\r\n    }\r\n    success(res.data.data)\r\n  }).catch(function (err) {\r\n    if (failure) {\r\n      failure(err)\r\n    }\r\n  })\r\n}\r\n// 返回在vue模板中的调用接口\r\nexport default {\r\n  // get请求\r\n  get: function (url, data, params, success, failure) {\r\n    return apiAxios('GET', url, data, params, success, failure)\r\n  },\r\n  // post请求\r\n  post: function (url, data, params, success, failure) {\r\n    return apiAxios('POST', url, data, params, success, failure)\r\n  },\r\n  // patch请求\r\n  patch: function (url, data, params, success, failure) {\r\n    return apiAxios('PATCH', url, data, params, success, failure)\r\n  },\r\n  // put请求\r\n  put: function (url, data, params, success, failure) {\r\n    return apiAxios('PUT', url, data, params, success, failure)\r\n  },\r\n  // delete\r\n  delete: function (url, data, params, success, failure) {\r\n    return apiAxios('DELETE', url, data, params, success, failure)\r\n  },\r\n  // 增加 postG请求 按后台要求 get请求在某些情况 需要传实体body so 添加postG请求\r\n  postG: function (url, data, params, postdata, success, failure) {\r\n    return apiAxios('postG', url, data, params, success, failure)\r\n  }\r\n}\r\n// 添加一个请求拦截器\r\naxios.interceptors.request.use(config => {\r\n  loadingInstance = Loading.service({\r\n    lock: true,\r\n    text: '努力拉取中 ~>_<~',\r\n    background: 'rgba(0, 0, 0, 0.7)'\r\n  })\r\n  config.headers.common['token'] = store.getters.getCookie // 每次发送之前 从vuex拿token携带\r\n  return config\r\n}, error => {\r\n  return Promise.reject(error)\r\n})\r\n// 添加一个响应拦截器\r\naxios.interceptors.response.use(response => {\r\n  loadingInstance.close()\r\n  // 与后台沟通 204没有实体类 但前台需要实体类用以 promise回调 so 我们自己搞 按照各业务 可以删除或修改\r\n  if (response.status === 204) {\r\n    response.data = {\r\n      content: []\r\n    }\r\n  }\r\n  return response\r\n}, error => {\r\n  loadingInstance.close()\r\n  if (error.response !== undefined) {\r\n    if (error.response.status === 401) {\r\n      // 401 未登录 跳转到login页\r\n      // window.location.href = `login?redirect=http://${window.location.host}/${window.location.hash}`\r\n    } else if (error.response.status === 400 || error.response.status === 500) {\r\n      // 参询 强哥意见 将部分保存信息放入 details，无限时打印 方便开发调试\r\n      if (error.response.data.details) {\r\n        Message.error({\r\n          showClose: true,\r\n          message: error.response.data.details,\r\n          type: 'warning',\r\n          duration: 0\r\n        })\r\n      }\r\n      Message.error(error.response.data.message)\r\n    } else {\r\n      Message.error(error.message)\r\n    }\r\n  }\r\n  return Promise.reject(error)\r\n})\r\n"]}]}