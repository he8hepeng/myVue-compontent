{"remainingRequest":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\src\\example.vue?vue&type=style&index=0&id=4408a6be&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\src\\example.vue","mtime":1569209015869},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\myVue-compontent\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.about {\r\n  .size(100%;100%);\r\n  .b_r(4px);\r\n  .box_shadow(rgba(0, 0, 0, 0.3));\r\n  padding: 10px;\r\n}\r\n",{"version":3,"sources":["example.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA","file":"example.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    <h1>通过vuex 模拟 登录人名称 为 {{ userName }}</h1>\r\n    <el-button type=\"primary\" @click=\"showType = true\">修改用户名 按需加载</el-button>\r\n    <el-button type=\"primary\" @click=\"abc\">组件传参 正常加载</el-button>\r\n    <template v-if=\"showType\">\r\n      <exampleCont />\r\n    </template>\r\n    <template v-if=\"!showType && showType2\">\r\n      <transmit :message1=\"message1\" :message2=\"message2\" :message3=\"message3\" :message4=\"message4\" :message5=\"message5\" :message6=\"message6\" />\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport transmit from '@/components/Modify-name/transmit.vue'\r\nexport default {\r\n  data () {\r\n    return {\r\n      showType: false,\r\n      showType2: false,\r\n      list: [{ x: 2 }, { x: 3 }, { x: 4 }],\r\n      message1: 1,\r\n      message2: '123',\r\n      message3: true,\r\n      message4: [12, 321],\r\n      message5: {\r\n        a: 2\r\n      },\r\n      message6: () => {\r\n        console.log(this.$data)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    // 注入 state 数据 注意 publics 为全局 其余数据应当新建Model\r\n    ...mapState({\r\n      userName: state => state.publics.userInfo.userName\r\n    })\r\n  },\r\n  components: {\r\n    exampleCont: () => import('@/components/Modify-name/exampleCont.vue'),\r\n    transmit\r\n  },\r\n  provide () {\r\n    return {\r\n      'parentClick': this.parentClick\r\n    }\r\n  },\r\n  created () {\r\n    // 公共 Element 方法 具体去 assets/js/mixin/globalMinxin.js 去看\r\n    this._messages('success', '欢迎使用', 2000)\r\n    // 全局的 lodash 具体其他操作去 Lodash官网去看\r\n    this._removeListData(this.list, 'x', { x: 3 })\r\n    // 全局的 promise封装 这个并不强制使用\r\n    this.asyncPromise().then(res => {\r\n      // 修改vuex数据\r\n      this.setUser(res.userinfo)\r\n    })\r\n    this.setAsync()\r\n  },\r\n  methods: {\r\n    // 注入 vuex 方法\r\n    ...mapActions(['setUser']),\r\n    asyncPromise () {\r\n      return this._promise((resolve, reject) => {\r\n        this.axios.get('/user/userInfo', { a: 2 }, { c: 4 }, res => {\r\n          resolve(res.content)\r\n        })\r\n      })\r\n    },\r\n    async setAsync () {\r\n      console.log('...开始执行 4000ms')\r\n      await this.setTime()\r\n      console.log('...等待上方结束才执行')\r\n    },\r\n    setTime () {\r\n      return this._promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve()\r\n        }, 4000)\r\n      })\r\n    },\r\n    abc () {\r\n      // 错误的方式 这么写打断腿\r\n      this.showType2 = true\r\n      this.showType = false\r\n    },\r\n    parentClick (_state) {\r\n      this._messages('info', _state)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.about {\r\n  .size(100%;100%);\r\n  .b_r(4px);\r\n  .box_shadow(rgba(0, 0, 0, 0.3));\r\n  padding: 10px;\r\n}\r\n</style>\r\n"]}]}